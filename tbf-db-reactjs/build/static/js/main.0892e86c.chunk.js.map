{"version":3,"sources":["cards/ImportCard.js","cards/EingabeCard.js","erzeugen/Erzeugen.js","cards/ErzeugenCard.js","cards/AuswertenCard.js","export/Export.js","cards/ExportCard.js","App.js","import/ImportForm.js","import/Import.js","eingabe/Eingabe.js","index.js"],"names":["ButtonRender","props","tables","map","buttonData","key","to","pathname","state","table","className","ImportCard","this","Component","ExportCard","Eingabe","exportTable","$url","fetch","then","response","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","Date","now","click","alias","onClick","Export","App","res","json","result","results","push","tablename","importieren","parseInt","bearbeiten","auswerten","exportieren","erzeugen","setState","length","role","aria-hidden","setRedirect","renderTable","ImportForm","file","data","uploadFile","bind","getElementById","classList","remove","formData","FormData","append","method","body","querySelector","add","setTimeout","error","fileUpload","addEventListener","submit","e","target","files","filename","name","importTable","confirmAlert","customUI","onClose","replace","message","console","log","type","title","accept","width","height","r","cx","cy","points","Import","location","Table","lazy","tableData","isLoaded","fallback","style","Width","Height","routing","exact","path","component","Erzeugen","ReactDOM","render"],"mappings":"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","file":"static/js/main.0892e86c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction ButtonRender(props) {\n    return props.tables.map((buttonData) => {\n        if (buttonData['importieren'] === 1) {\n            return (\n                <Link key={buttonData['tablename']} to={{ pathname: \"/import\", state: {table: buttonData['tablename']} }} className=\"btn btn-success btn-block my-2\">\n                    {buttonData['alias']} \n                </Link>  \n            )\n        } else {\n            return null;\n        }\n    })\n}\n\nexport default class ImportCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tables: this.props.tables,\n        };\n    }\n\n    render() {\n        const { tables } = this.state;\n        return(\n            <div className=\"col\">\n                <div className=\"card p-0\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Importieren</h5>\n                        <ButtonRender tables={tables} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction ButtonRender(props) {\n    return props.tables.map((buttonData) => {\n        if (buttonData['bearbeiten'] === 1) {\n            return (\n                <Link key={buttonData['tablename']} to={{ pathname: \"/eingabe\", state: {table: buttonData['tablename']} }} className=\"btn btn-warning btn-block my-2\">\n                    {buttonData['alias']}\n                </Link> \n            )\n        } else {\n            return null;\n        }\n    })\n}\n\nexport default class ExportCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tables: this.props.tables,\n        };\n    }\n\n    render() {\n        const { tables } = this.state;\n        return(\n            <div className=\"col\">\n                <div className=\"card p-0\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Bearbeiten</h5>\n                        <ButtonRender tables={tables} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Eingabe extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            table: this.props.table,\n            alias: this.props.alias,\n        };\n    }\n\n    exportTable = () => {\n        let $url = \"\"\n        if (this.state.table === 'SEF_E-Verbraucherliste') {\n            $url = \"https://tbf-db-backend.ep-projekte.de/renderEVerbraucherliste.php\"\n        } \n        if (this.state.table === 'SEF_Messstellenliste') {\n            $url = \"https://tbf-db-backend.ep-projekte.de/renderMessstellenliste.php\"\n        }\n        if (this.state.table === 'SEF_Armaturenliste') {\n            $url = \"https://tbf-db-backend.ep-projekte.de/renderArmaturenliste.php\"\n        }\n        if (this.state.table === 'SEF_Ausrüstungsliste') {\n            $url = \"https://tbf-db-backend.ep-projekte.de/renderAusruestungsliste.php\"\n        }\n\n\t\tfetch($url)\n\t\t.then(response => {\n\t\t\tresponse.blob().then(blob => {\n\t\t\t\tlet url = window.URL.createObjectURL(blob);\n\t\t\t\tlet a = document.createElement('a');\n\t\t\t\ta.href = url;\n\t\t\t\ta.download = this.state.table + '_' + Date.now() + '.pdf';\n\t\t\t\ta.click();\n\t\t\t});\n        });\n\t}\n\n    render() {\n        const { alias } = this.state\n        return (\n            <button onClick={this.exportTable} className=\"btn btn-secondary btn-block my-2\">\n                {alias}\n            </button> \n        )\n    }\n}","import React, { Component } from 'react';\nimport Erzeugen from '../erzeugen/Erzeugen'\n\nfunction ButtonRender(props) {\n    return props.tables.map((buttonData) => {\n        if (buttonData['erzeugen'] === 1) {\n            return (\n                <Erzeugen key={buttonData['tablename']} alias={buttonData['alias']} table={buttonData['tablename']} />\n            )\n        } else {\n            return null;\n        }\n    })\n}\n\nexport default class ImportCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tables: this.props.tables,\n        };\n    }\n\n    render() {\n        const { tables } = this.state;\n        return(\n            <div className=\"col\">\n                <div className=\"card p-0\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Erzeugen</h5>\n                        <ButtonRender tables={tables}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction ButtonRender(props) {\n    return props.tables.map((buttonData) => {\n        if (buttonData['auswerten'] === 1) {\n            return (\n                <Link key={buttonData['tablename']} to={{ pathname: \"/import\", state: {table: buttonData['tablename']} }} className=\"btn btn-primary btn-block my-2\">  \n                    {buttonData['alias']}\n                </Link> \n            )\n        } else {\n            return null;\n        }\n    })\n}\n\nexport default class ImportCard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tables: this.props.tables,\n        }\n    }\n\n    render() {\n        const { tables } = this.state;\n        return(\n            <div className=\"col\">\n                <div className=\"card p-0\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Auswerten</h5>\n                        <ButtonRender tables={tables} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Export extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            table: this.props.table,\n            alias: this.props.alias,\n        };\n    }\n\n    exportTable = () => {\n\t\tfetch(\"https://tbf-db-backend.ep-projekte.de/exportTables.php?table=\" + this.state.table)\n\t\t.then(response => {\n\t\t\tresponse.blob().then(blob => {\n\t\t\t\tlet url = window.URL.createObjectURL(blob);\n\t\t\t\tlet a = document.createElement('a');\n\t\t\t\ta.href = url;\n\t\t\t\ta.download = '_Neubau_' + this.state.table + '_Datenbank.xlsx';\n\t\t\t\ta.click();\n\t\t\t});\n        });\n\t}\n\n    render() {\n        const { alias } = this.state\n        return (\n            <button onClick={this.exportTable} className=\"btn btn-danger btn-block my-2\">\n                {alias}\n            </button>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Export from '../export/Export'\n\nfunction ButtonRender(props) {\n    return props.tables.map((buttonData) => {\n        if (buttonData['exportieren'] === 1) {\n            return (\n                <Export key={buttonData['tablename']} table={buttonData['tablename']} alias={buttonData['alias']} />\n            )\n        } else {\n            return null;\n        }\n    })\n}\n\nexport default class ExportCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tables: this.props.tables,\n        };\n    }\n\n    render() {\n        const { tables } = this.state;\n        return(\n            <div className=\"col\">\n                <div className=\"card p-0\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Export</h5>\n                        <ButtonRender tables={tables} />\n                        {/*tables.map((item) => (\n                            <Export key={item['tablename']} table={item['alias']} />\n                        ))*/}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\n\nimport ImportCard from './cards/ImportCard';\nimport EingabeCard from './cards/EingabeCard';\nimport ErzeugenCard from './cards/ErzeugenCard';\nimport AuswertenCard from './cards/AuswertenCard';\nimport ExportCard from './cards/ExportCard';\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tables: [],\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://tbf-db-backend.ep-projekte.de/fetchTables.php\")\n        .then(res => res.json())\n        .then((result) => {\n            const tables = [];\n            result.map(results => {\n                tables.push({\n                    tablename: results[0],\n                    alias: results[1],\n                    importieren: parseInt(results[2], 10),\n                    bearbeiten: parseInt(results[3], 10),\n                    auswerten: parseInt(results[4], 10),\n                    exportieren: parseInt(results[5], 10),\n                    erzeugen: parseInt(results[6], 10),\n                })\n                return undefined\n            })\n            return tables\n        })\n        .then((tables) => {\n            this.setState({\n                tables: tables,\n            })\n        })\n    }\n\n    render() {\n        if (this.state.tables.length <= 0) {\n            return (\n                <div className=\"d-flex justify-content-around\">\n                    <div className=\"row\">\n                        <div className=\"d-flex align-items-center\">\n                        <strong>Lädt...</strong>\n                        <div className=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\" />\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"d-flex justify-content-around\">\n                    <div className=\"row\">\n                        <ImportCard tables={this.state.tables} />\n                        <EingabeCard setRedirect={this.renderTable} tables={this.state.tables} />\n                        <AuswertenCard tables={this.state.tables} />\n                        <ExportCard tables={this.state.tables} />\n                        <ErzeugenCard tables={this.state.tables} />\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n","import React, { Component } from 'react';\nimport { confirmAlert } from 'react-confirm-alert';\nimport './ImportForm.scss';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nexport default class ImportForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            table: this.props.table,\n            file: null,\n            data: null\n        }\n        this.uploadFile = this.uploadFile.bind(this);\n        document.getElementById('root').classList.remove('container-fluid');\n    }\n\n    uploadFile(table, file) {\n        const url = 'https://tbf-db-backend.ep-projekte.de/importTable.php'; \n                \n        const formData = new FormData();  \n        formData.append('table', table)  \n        formData.append('file', file);    \n        const config = { \n            method: 'POST',\n            body: formData\n        };\n    \n        fetch(url, config)\n        .then( result => result.json() )\n        .then(\n            (result) => {\n                this.setState({ \n                    data: result,\n                    file: null\n                })\n                document.querySelector(\".upload\").classList.add(\"done\");\n                document.querySelector(\".upload\").classList.remove(\"drop\", \"drag\");\n                setTimeout(() => document.querySelector(\".upload\").classList.remove(\"done\"), 1000);\n            },\n            (error) => {\n                this.setState({ \n                    data: error,\n                    file: null\n                })\n            } \n        )\n    }\n\n    componentWillUnmount() {\n        document.getElementById('root').classList.add('container-fluid');\n        this.setState({ data: null });\n    }\n\n    componentDidMount() {\n        var fileUpload = document.querySelector(\".upload\");\n\n        fileUpload.addEventListener(\"dragover\", function() {\n            this.classList.add(\"drag\");\n            this.classList.remove(\"drop\", \"done\");\n        });\n\n        fileUpload.addEventListener(\"dragleave\", function() {\n            \n        });\n\n        this.submit = (e) => {\n            this.setState({ file: e.target.files[0] }); \n            this.setState({ data: null });\n\n            let filename = this.state.file.name\n            let importTable = this.state.table\n\n            confirmAlert({\n                customUI: ({ onClose }) => {\n                    return (\n                        <div className='custom-ui'>\n                            <div className='modal-dialog'>\n                                <div className='modal-content'>\n                                    <div className='modal-header'>\n                                        <h5 className='modal-title'>Tabelle importieren</h5>\n                                    </div>\n                                    <div className='modal-body'>\n                                        <p>\n                                            Soll die Datei: <br />\n                                            <span className='text-danger'>\n                                                {filename}\n                                            </span> <br />\n                                            wirklich in die Tabelle:&nbsp;\n                                            <span className='text-danger'>\n                                                {importTable.replace('RI-TBF_SEF_', '').replace('_Liste', ' Liste')}\n                                            </span> importiert werden?\n                                        </p>\n                                    </div>\n                                    <div className='modal-footer'>\n                                        <button className='btn btn-primary'\n                                            onClick={() => {\n                                                if (this.state.file) {\n                                                    fileUpload.classList.remove(\"drag\");\n                                                    fileUpload.classList.add(\"drop\");  \n                                                    this.uploadFile(this.state.table, this.state.file);      \n                                                }\n                                                onClose();\n                                            }}>\n                                            Ja\n                                        </button>\n                                        <button className='btn btn-secondary'\n                                            onClick={() => {\n                                                this.setState({ file: null });\n                                                onClose();\n                                            }}>\n                                            Nein\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                }\n            });\n        }\n\n        fileUpload.addEventListener(\"drop\", this.submit.bind(this), false);\n        fileUpload.addEventListener(\"change\", this.submit.bind(this), false);\n    }\n\n    render() {\n        const data = this.state.data;\n        let message;\n        if (data) {\n            message = <div className=\"message\"><p>{data[0]}</p><p>{data[1]}</p><p>{data[2]}</p><p>{data[3]}</p><p>{data[4]}</p></div>\n            console.log(message);\n        }\n        return (\n            <section>\n                <div className=\"upload\">\n                    <input type=\"file\" title=\"\" accept=\".xlsx\" className=\"drop-here\" />\n                    <div className=\"text text-drop text-center\">.xlsx Datei <br />hier ablegen <br />oder klicken <br />zum importieren</div>\n                    <div className=\"text text-upload\">uploading</div>\n                    <svg className=\"progress-wrapper\" width=\"300\" height=\"300\">\n                        <circle className=\"progress\" r=\"115\" cx=\"150\" cy=\"150\"></circle>\n                    </svg>\n                    <svg className=\"check-wrapper\" width=\"130\" height=\"130\">\n                        <polyline className=\"check\" points=\"100.2,40.2 51.5,88.8 29.8,67.5 \"/>\n                    </svg>\n                    <div className=\"shadow\"></div>\n                </div>\n                {message}\n            </section>\n        )   \n    }\n}","import React, { Component } from 'react';\nimport ImportForm from '../import/ImportForm'\n\nexport default class Import extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            table: this.props.location.state.table\n        }\n    }\n     \n    render() { \n        const { table } = this.state;\n        return (\n            <section>\n                <div className=\"container\">\n                    <h5 className=\"card-title text-center\">Import für <u>{table.replace('RI-TBF_SEF_', '').replace('_Liste', ' Liste')}</u></h5>\n                    <ImportForm table={table} />\n                </div>\n            </section> \n        ); \n    } \n} \n   ","import React, { lazy, Component, Suspense } from 'react';\nconst Table = lazy(() => import('./Table'))\n\nexport default class Eingabe extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            table: this.props.location.state.table,\n            tableData: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://tbf-db-backend.ep-projekte.de/renderTables.php?table=\" + this.state.table)\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    tableData: result\n                });\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }   \n        )\n    }\n\n    render() {\n        const { tableData, isLoaded, error, table } = this.state\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div className=\"d-flex justify-content-center\">\n                <div className=\"spinner-border\" style={{Width: 3 +'rem', Height: 3 + 'rem'}} role=\"status\">\n                    <span className=\"sr-only\">Lädt...</span>\n                </div>\n            </div>;\n        } else \n        return (\n            <Suspense fallback={<div>Lädt...</div>}>\n                <Table tableData={tableData} table={table} />\n            </Suspense>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\n\nimport App from './App';\nimport Import from './import/Import';\nimport Eingabe from './eingabe/Eingabe';\nimport Erzeugen from './erzeugen/Erzeugen';\n//import Auswerten from './auswerten/Auswerten';\nimport Export from './export/Export';\n\nconst routing = (\n  <Router>\n    <Route exact path=\"/\" component={App} />\n    <Route path=\"/import\" component={Import} />\n    <Route path=\"/eingabe\" component={Eingabe} />\n    <Route path=\"/erzeugen\" component={Erzeugen} />\n    {/* <Route path=\"/auswerten\" component={Auswerten} /> */}\n    <Route path=\"/export\" component={Export} />\n  </Router>\n)\n\nReactDOM.render(\n  routing,\n  document.getElementById('root')\n)"],"sourceRoot":""}