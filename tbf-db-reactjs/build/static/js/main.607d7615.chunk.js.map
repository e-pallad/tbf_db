{"version":3,"sources":["component/ImportCard.js","component/ExportCard.js","component/EingabeCard.js","App.js","component/Table.js","contents/Eingabe.js","contents/Import.js","index.js"],"names":["ImportCard","props","state","items","handleChange","bind","event","this","setState","table","target","value","className","to","pathname","tables","Component","ExportCard","id","map","item","i","key","defaultValue","type","onChange","App","error","isLoaded","fetch","then","res","json","result","message","setRedirect","renderTable","href","EditableCell","initialValue","index","row","column","updateMyData","useState","setValue","React","useEffect","e","onBlur","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","undefined","placeholder","DefaultColumnFilter","filterValue","preFilteredRows","setFilter","TableRender","columns","data","skipPageReset","filterTypes","useMemo","text","rows","filter","rowValue","values","String","toLowerCase","startsWith","defaultColumn","Filter","Cell","useTable","initialState","pageindex","autoResetPage","useFilters","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","pageIndex","pageSize","Fragment","headerGroup","getHeaderGroupProps","headers","getHeaderProps","style","verticalAlign","scope","render","canFilter","getRowProps","cells","cell","getCellProps","padding","borderRadius","border","Number","marginTop","onClick","disabled","Table","tableData","Header","accessor","slice","setData","setSkipPageReset","rowIndex","columnId","old","Eingabe","location","Import","file","onFormSubmit","fileUpload","preventDefault","response","console","log","files","name","formData","FormData","append","url","method","body","onSubmit","class","hidden","routing","exact","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.607d7615.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class ImportCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: this.props.items,\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({table: event.target.value});\n    }\n\n    render() {\n        const { items } = this.state;\n        return(\n            <div className=\"col-sm-6\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Zum Datenimport</h5>\n                        <p className=\"card-text\">Für welche Tabelle soll der Datenimport gestartet werden?</p>\n\n                            <div className=\"form-row align-items-center\">\n                                <div className=\"col-md-8 my-1\">\n                                    <Link to={{ pathname: \"/import\", state: {tables: items} }} className=\"btn btn-primary\">zum Import</Link>\n                                </div>\n                            </div>\n                            \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class ExportCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: this.props.items,\n            table: ''\n        };\n    }\n\n    render() {\n        const { table, items } = this.state;\n        return(\n            <div className=\"col-sm-6\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Zum Datenexport</h5>\n                        <p className=\"card-text\">Welcher Export wird benötigt?</p>\n                        <form>\n                            <div className=\"form-row align-items-center\">\n                                <div className=\"col-md-8 my-1\">\n                                    <label className=\"mr-sm-2 sr-only\">Preference</label>\n                                    <select className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\n                                        {items.map((item, i) => (\n                                            <option key={i} defaultValue=\"{item}\">{item}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary\">Go somewhere</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class ExportCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: this.props.items,\n            table: 'RI-TBF_SEF_Apparateliste'\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({table: event.target.value});\n    }\n\n    render() {\n        const { table, items } = this.state;\n        return(\n            <div className=\"col-sm-6\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Zur Eingabe</h5>\n                        <p className=\"card-text\">In welcher Tabelle sollen Daten geändert werden?</p>\n                        <form>\n                            <div className=\"form-row align-items-center\">\n                                <div className=\"col-md-8 my-1\">\n                                    <label className=\"mr-sm-2 sr-only\">Preference</label>\n                                    <select className=\"custom-select mr-sm-2\" value={this.state.table} onChange={this.handleChange}>\n                                        {items.map((item, i) => (\n                                            <option key={i} defaultValue=\"{item}\">{item}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                                <Link to={{ pathname: \"/eingabe\", state: {table: table} }} className=\"btn btn-primary\">Tabelle laden</Link>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\n\nimport ImportCard from './component/ImportCard';\nimport ExportCard from './component/ExportCard';\nimport EingabeCard from './component/EingabeCard';\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: []\n        };\n\n    }\n\n    componentDidMount() {\n        fetch(\"https://tbf-db-backend.ep-webdesign.de/fetchTables.php\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    items: result.tables\n                });\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }   \n        )\n    }\n\n    render() {\n        const { error, isLoaded, items } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else \n          return (\n            <div className=\"condiv home\">\n              <div className=\"row row-cols-2\">\n\n                <ImportCard items={items} />\n                <ExportCard items={items} />\n                <EingabeCard setRedirect={this.renderTable} items={items} />\n\n                <div className=\"col-sm-6\">\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title\">Platzhalter</h5>\n                      <p className=\"card-text\">Platzhalter Text</p>\n                      <a href=\"https://www.reactjs.org\" className=\"btn btn-primary\">Hier könnte ihr Button stehen</a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )\n  }\n}\n","import React, { useMemo, useState } from 'react'\nimport { useTable, usePagination, useGlobalFilter, useFilters } from 'react-table'\n\nconst EditableCell = ({\n    value: initialValue,\n    row: { index },\n    column: { id },\n    updateMyData, \n}) => {\n    const [value, setValue] = useState(initialValue)\n  \n    const onChange = e => {\n        setValue(e.target.value)\n    }\n  \n    const onBlur = () => {\n        updateMyData(index, id, value)\n    }\n  \n    React.useEffect(() => {\n        setValue(initialValue)\n    }, [initialValue])\n  \n    return <input value={value} onChange={onChange} onBlur={onBlur} />\n}\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter\n}) {\n    const count = preGlobalFilteredRows.length;\n  \n    return (\n        <div className=\"m-2 w-25 justify-content-start\">\n            Globale Suche:{\" \"}\n            <input\n                value={globalFilter || \"\"}\n                onChange={e => {\n                    setGlobalFilter(e.target.value || undefined);\n                }}\n                placeholder={`${count} Einträge...`}\n                className=\"form-control mr-sm-2\"\n            />\n        </div>\n    );\n}\n  \nfunction DefaultColumnFilter({\n    column: { filterValue, preFilteredRows, setFilter }\n}) {\n    const count = preFilteredRows.length;\n  \n    return (\n        <input\n            value={filterValue || \"\"}\n            className=\"form-control\"\n            onChange={e => {\n            setFilter(e.target.value || undefined); \n            }}\n            placeholder={`Durchsuche ${count} Einträge...`}\n        />\n    );\n}\n\nfunction TableRender({ columns, data, updateMyData, skipPageReset }) {\n    const filterTypes = React.useMemo(\n        () => ({\n            text: (rows, id, filterValue) => {\n                return rows.filter(row => {\n                const rowValue = row.values[id];\n                return rowValue !== undefined\n                    ? String(rowValue)\n                        .toLowerCase()\n                        .startsWith(String(filterValue).toLowerCase())\n                    : true;\n                });\n            }\n        }),\n        []\n    );\n\n    const defaultColumn = {\n          Filter: DefaultColumnFilter,\n          Cell: EditableCell,\n    };\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageIndex, pageSize, globalFilter },\n        preGlobalFilteredRows,\n        setGlobalFilter\n    } = useTable(\n        {\n            columns,\n            data,\n            initialState: { pageindex: 2 },\n            defaultColumn,\n            filterTypes,\n            autoResetPage: !skipPageReset,\n            updateMyData,\n        },\n        useFilters,\n        useGlobalFilter,\n        usePagination,\n        \n    );\n\n    return (\n        <React.Fragment>\n            <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={globalFilter}\n                setGlobalFilter={setGlobalFilter}\n            />\n            <table {...getTableProps()} className=\"table table-striped\">\n                <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map(column => (\n                        <th\n                        {...column.getHeaderProps()}\n                        style={{ verticalAlign: \"middle\" }}\n                        scope=\"col\"\n                        >\n                            {column.render(\"Header\")}\n                            <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\n                        </th>\n                    ))}\n                    </tr>\n                ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row);\n                    return (\n                    <tr {...row.getRowProps()}>\n                        {row.cells.map(cell => {\n                        return (\n                            <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                        );\n                        })}\n                    </tr>\n                    );\n                })}\n                </tbody>\n            </table>\n            <div className=\"justify-content-center mb-3\">\n                <select\n                    style={{\n                        padding: \"7px\",\n                        borderRadius: \"3px\",\n                        border: \"1px solid #007bff\"\n                    }}\n                    value={pageSize}\n                    onChange={e => {\n                        setPageSize(Number(e.target.value));\n                    }}\n                >\n                    {[10, 20, 30, 40, 50].map(pageSize => (\n                        <option key={pageSize} value={pageSize}>\n                        Zeige {pageSize}\n                        </option>\n                    ))}\n                </select>{\" \"}\n                <button\n                    className=\"btn btn-outline-primary\"\n                    style={{ marginTop: \"-4px\" }}\n                    onClick={() => gotoPage(0)}\n                    disabled={!canPreviousPage}\n                >\n                {\"<<\"}\n                </button>{\" \"}\n                <button\n                    className=\"btn btn-outline-primary\"\n                    style={{ marginTop: \"-4px\" }}\n                    onClick={() => previousPage()}\n                    disabled={!canPreviousPage}\n                >\n                {\"<\"}\n                </button>{\" \"}\n                <span>\n                    Seite{\" \"}\n                    <strong>\n                        {pageIndex + 1} von {pageOptions.length}\n                    </strong>{\" \"}\n                </span>\n                <button\n                    className=\"btn btn-outline-primary\"\n                    style={{ marginTop: \"-4px\" }}\n                    onClick={() => nextPage()}\n                    disabled={!canNextPage}\n                >\n                {\">\"}\n                </button>{\" \"}\n                <button\n                    className=\"btn btn-outline-primary\"\n                    style={{ marginTop: \"-4px\" }}\n                    onClick={() => gotoPage(pageCount - 1)}\n                    disabled={!canNextPage}\n                >\n                {\">>\"}\n                </button>\n            </div>\n        </React.Fragment>\n    )\n}\n\n\nexport default function Table(props) {\n    const tableData = props.tableData\n    const columns = useMemo(() => tableData[0].map(( item ) => {\n        return(\n            {\n                Header: item,\n                accessor: item\n            }\n        )\n    })) \n    \n    const [data, setData] = useState(() => tableData.slice(1))\n    const [originalData] = useState(data)\n    const [skipPageReset, setSkipPageReset] = useState(false)\n\n    const updateMyData = (rowIndex, columnId, value) => {\n        setSkipPageReset(true)\n        setData(old =>\n            old.map((row, index) => {\n                if (index === rowIndex) {\n                    return {\n                        ...old[rowIndex],\n                        [columnId]: value,\n                    }\n                }\n                return row\n            })\n        )\n    }\n\n    React.useEffect(() => {\n        setSkipPageReset(false)\n    }, [data])\n    \n    return(\n        <React.Fragment>\n            <TableRender \n                columns={columns}\n                data={data}\n                updateMyData={updateMyData}\n                skipPageReset={skipPageReset} \n            />\n        </React.Fragment>\n    )\n}","import React, { Component } from 'react';\nimport Table from '../component/Table';\n\nexport default class Eingabe extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            table: this.props.location.state.table,\n            tableData: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://tbf-db-backend.ep-webdesign.de/renderTables.php?table=\" + this.state.table)\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    tableData: result\n                });\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }   \n        )\n    }\n\n    render() {\n        const { tableData, isLoaded, error } = this.state\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else \n        return(\n            <Table tableData={tableData}/>\n        )\n    }\n}","import React, { Component } from 'react';\n\n/**\nexport default class Import extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            table: this.props.location.state.table\n        };\n    }\n\n    render() {\n        const { table } = this.state\n        return(\n            <div>\n                <h1>It worked!</h1>\n                <h2>ausgewählte Tabelle: {table}</h2>\n            </div>\n        )\n    }\n}\n*/\n  \nexport default class Import extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tables: this.props.location.state.tables,\n            file: null\n        }\n\n        this.onFormSubmit = this.onFormSubmit.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.fileUpload = this.fileUpload.bind(this)\n    }\n\n    onFormSubmit(e){\n        e.preventDefault()\n        this.fileUpload(this.state.file).then((response)=>{\n            console.log(response.data);\n        })\n    }\n\n    onChange(e) {\n        this.setState({file:e.target.files[0]})\n        console.log({file:e.target.files[0].name})\n    }\n\n    fileUpload(file) {\n        const url = 'http://localhost/importTable.php';\n        const formData = new FormData();\n\n        formData.append('file',file)\n\n        const response = fetch({url}, {\n            method: 'POST',\n            headers: { 'content-type': 'multipart/form-data' },\n            body: formData\n        })\n\n        return response.json()\n    }\n     \n    render() { \n        const { tables, file } = this.state;\n        return (\n            <section>\n                <div className=\"row mx-1 my-4 pt-2 pb-3\">\n                    {tables.map((table) => (\n                        <div className=\"col-md-3 mb-3\">\n                            <div className=\"card py-4 px-5\">\n                                <h5 className=\"card-title\">Import für: {table}</h5>\n                                <form className=\"md-form\" onSubmit={this.onFormSubmit}>\n                                    <div class=\"row\">\n                                        <div class=\"col\">\n                                            <div className=\"btn btn-sm float-left\">\n                                                <label className=\"btn btn-primary\">\n                                                    Datei auswählen<input type=\"file\" onChange={this.onChange} hidden/>\n                                                </label>\n                                            </div>\n                                        </div>\n                                        <div class=\"col\">\n                                            <button type=\"submit\" className=\"btn btn-primary\">Hochladen</button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </section> \n    \n        ); \n    } \n} \n   ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\n\nimport App from './App';\nimport Eingabe from './contents/Eingabe';\nimport Import from './contents/Import';\nimport ExportCard from './component/ExportCard';\n\nconst routing = (\n  <Router>\n    <Route exact path=\"/\" component={App} />\n    <Route path=\"/import\" component={Import} />\n    <Route path=\"/export\" component={ExportCard} />\n    <Route path=\"/eingabe\" component={Eingabe} />\n  </Router>\n)\n\nReactDOM.render(\n  routing,\n  document.getElementById('root')\n)"],"sourceRoot":""}