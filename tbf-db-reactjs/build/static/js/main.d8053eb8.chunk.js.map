{"version":3,"sources":["cards/ImportCard.js","cards/EingabeCard.js","cards/ErzeugenCard.js","cards/AuswertenCard.js","cards/ExportCard.js","App.js","import/ImportForm.js","import/Import.js","eingabe/Table.js","eingabe/Eingabe.js","index.js"],"names":["ImportCard","props","state","items","this","className","map","item","key","to","pathname","table","replace","Component","ExportCard","id","i","defaultValue","type","App","error","isLoaded","fetch","then","res","json","result","setState","tables","message","setRedirect","renderTable","ImportForm","file","responseReady","data","uploadFile","bind","document","getElementById","classList","remove","formData","FormData","append","method","body","add","fileUpload","querySelector","addEventListener","setFile","e","target","files","console","log","title","width","height","r","cx","cy","points","Import","location","pushData","a","JSON","stringify","config","ok","Error","statusText","Table","onGridReady","params","gridApi","api","gridColumnApi","columnApi","editType","defaultColDef","sortable","editable","filter","resizable","dataChanged","pushDataToDb","tableData","columns","slice","header","column","headerName","field","style","columnDefs","rowData","pagination","suppressFieldDotNotation","onRowValueChanged","Eingabe","routing","exact","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.d8053eb8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class ImportCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: this.props.items,\n        };\n    }\n\n    render() {\n        const { items } = this.state;\n        return(\n            <div className=\"col-sm-2\">\n                <div className=\"card p-0\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Importieren</h5>\n                        {items.map((item) => (\n                            <Link key={item} to={{ pathname: \"/import\", state: {table: item} }} className=\"btn btn-success btn-block my-2\">\n                                {item.replace('RI-TBF_SEF_', '').replace('_Liste', ' Liste')}\n                            </Link>     \n                        ))}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class ExportCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: this.props.items,\n        };\n    }\n\n    render() {\n        const { items } = this.state;\n        return(\n            <div className=\"col-sm-2\">\n                <div className=\"card p-0\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Bearbeiten</h5>\n                        {items.map((item) => (\n                            <Link key={item} to={{ pathname: \"/eingabe\", state: {table: item} }} className=\"btn btn-warning btn-block my-2\">\n                                {item.replace('RI-TBF_SEF_', '').replace('_Liste', ' Liste')}\n                            </Link>     \n                        ))}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class ImportCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: this.props.items,\n        };\n    }\n\n    render() {\n        const { items } = this.state;\n        return(\n            <div className=\"col-sm-2\">\n                <div className=\"card p-0\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Erzeugen</h5>\n                        {items.map((item) => (\n                            <Link key={item} to={{ pathname: \"/import\", state: {table: item} }} className=\"btn btn-secondary btn-block my-2\">\n                                {item.replace('RI-TBF_SEF_', '').replace('_Liste', ' Liste')}\n                            </Link>     \n                        ))}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class ImportCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: this.props.items,\n        };\n    }\n\n    render() {\n        const { items } = this.state;\n        return(\n            <div className=\"col-sm-2\">\n                <div className=\"card p-0\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Auswerten</h5>\n                        {items.map((item) => (\n                            <Link key={item} to={{ pathname: \"/import\", state: {table: item} }} className=\"btn btn-primary btn-block my-2\">\n                                {item.replace('RI-TBF_SEF_', '').replace('_Liste', ' Liste')}\n                            </Link>     \n                        ))}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class ExportCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: this.props.items,\n        };\n    }\n\n    render() {\n        const { items } = this.state;\n        return(\n            <div className=\"col-sm-2\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Export</h5>\n                        <form>\n                            <div className=\"form-row align-items-center\">\n                                <div className=\"col-md-8 my-1\">\n                                    <label className=\"mr-sm-2 sr-only\">Preference</label>\n                                    <select className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\n                                        {items.map((item, i) => (\n                                            <option key={i} defaultValue=\"{item}\">{item}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary\">Go somewhere</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\n\nimport ImportCard from './cards/ImportCard';\nimport EingabeCard from './cards/EingabeCard';\nimport ErzeugenCard from './cards/ErzeugenCard';\nimport AuswertenCard from './cards/AuswertenCard';\nimport ExportCard from './cards/ExportCard';\n\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: []\n        };\n\n    }\n\n    componentDidMount() {\n        fetch(\"https://tbf-db-backend.ep-webdesign.de/fetchTables.php\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    items: result.tables\n                });\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }   \n        )\n    }\n\n    render() {\n        const { error, isLoaded, items } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else \n          return (\n            <div className=\"condiv home\">\n              <div className=\"row justify-content-center\">\n                <ImportCard items={items} />\n                <EingabeCard setRedirect={this.renderTable} items={items} />\n                <ErzeugenCard items={items} />\n                <AuswertenCard items={items} />\n                <ExportCard items={items} />\n              </div>\n            </div>\n          )\n  }\n}\n","import React, { Component } from 'react';\nimport './ImportForm.scss';\n\nexport default class ImportForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            table: this.props.table,\n            file: null,\n            responseReady: false,\n            data: null\n        }\n        this.uploadFile = this.uploadFile.bind(this);\n        document.getElementById('root').classList.remove('container-fluid');\n    }\n\n    uploadFile() {\n        const { table, file } = this.state;\n            const url = 'https://tbf-db-backend.ep-webdesign.de/importTable.php';\n            //const url = 'http://localhost/importTable.php';    \n                \n            const formData = new FormData();  \n            formData.append('table', table)  \n            formData.append('file', file);    \n            const config = { \n                method: 'POST',\n                body: formData\n            };\n\n            fetch(url, config)\n            .then( this.setState({ responseReady: 'loading' }) )\n            .then( result => result.json() )\n            .then(\n                (result) => {\n                    this.setState({ \n                        responseReady: true,\n                        data: result\n                    })\n                },\n                (error) => {\n                    this.setState({ \n                        data: error \n                    })\n                } \n            )\n    }\n\n    componentWillUnmount() {\n        document.getElementById('root').classList.add('container-fluid');\n    }\n\n    componentDidMount() {\n        var fileUpload = document.querySelector(\".upload\");\n\n        fileUpload.addEventListener(\"dragover\", function() {\n            this.classList.add(\"drag\");\n            this.classList.remove(\"drop\", \"done\");\n        });\n\n        fileUpload.addEventListener(\"dragleave\", function() {\n            \n        });\n\n        this.setFile = (e) => {    \n            this.setState({ file: e.target.files[0] }); \n            this.setState({ data: null });\n            if (this.state.file) {\n                console.log(this.state.file)\n                fileUpload.classList.remove(\"drag\");\n                fileUpload.classList.add(\"drop\");   \n\n                this.uploadFile()         \n            }\n\n                //setTimeout(() => fileUpload.classList.add(\"done\"), 3000);\n        }\n\n        fileUpload.addEventListener(\"drop\", this.setFile.bind(this), false);\n        fileUpload.addEventListener(\"change\", this.setFile.bind(this), false);\n    }\n\n    render() {\n        return (\n            <div className=\"upload\">\n                <input type=\"file\" title=\"\" className=\"drop-here\" />\n                <div className=\"text text-drop text-center\">Datei hier <br />ablegen</div>\n                <div className=\"text text-upload\">uploading</div>\n                <svg className=\"progress-wrapper\" width=\"300\" height=\"300\">\n                    <circle className=\"progress\" r=\"115\" cx=\"150\" cy=\"150\"></circle>\n                </svg>\n                <svg className=\"check-wrapper\" width=\"130\" height=\"130\">\n                    <polyline className=\"check\" points=\"100.2,40.2 51.5,88.8 29.8,67.5 \"/>\n                </svg>\n                <div className=\"shadow\"></div>\n            </div>\n        )   \n    }\n}","import React, { Component } from 'react';\nimport ImportForm from '../import/ImportForm'\n\nexport default class Import extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            table: this.props.location.state.table\n        }\n    }\n     \n    render() { \n        const { table } = this.state;\n        return (\n            <section>\n                <div className=\"container\">\n                    <h5 className=\"card-title text-center\">Import für <u>{table.replace('RI-TBF_SEF_', '').replace('_Liste', ' Liste')}</u></h5>\n                    <ImportForm table={table} />\n                </div>\n            </section> \n        ); \n    } \n} \n   ","import React, { Component } from 'react'\nimport { AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nasync function pushDataToDb(pushData, table) {\n\n    const url = 'https://tbf-db-backend.ep-webdesign.de/updateTable.php';\n    //const url = 'http://localhost/updateTable.php';\n\n    const formData = new FormData();  \n    formData.append('table', table); \n    formData.append('data', JSON.stringify(pushData));  \n\n    const config = { \n        method: 'POST',\n        body: formData\n    };\n    try {\n        const result = await fetch(url, config)\n        if (!result.ok) {\n            throw Error(result.statusText);\n        } else {\n            //console.log(result)\n        }\n    } catch (error) {\n        console.log(error)\n    }\n    \n}\n\nexport default class Table extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editType: 'fullRow',\n            defaultColDef: {\n                sortable: true,\n                editable: true,\n                filter: true,\n                resizable: true,\n            },\n            table: this.props.table\n        }\n        this.onGridReady = this.onGridReady.bind(this);\n        this.dataChanged = this.dataChanged.bind(this);\n    }\n\n    onGridReady = params => {\n        this.gridApi = params.api;\n        this.gridColumnApi = params.columnApi;\n\n        /*\n        var allColumnIds = [];\n        this.gridColumnApi.getAllColumns().forEach(function(column) {\n            allColumnIds.push(column.colId);\n        });\n        params.columnApi.autoSizeColumns(allColumnIds, true)\n        */\n        //params.api.sizeColumnsToFit();\n        //this.gridApi.autoSizeColumns(true)\n    };\n\n    dataChanged(data) {\n        pushDataToDb(data.data, this.state.table)\n    }\n\n    render() {\n        const { tableData } = this.props\n        const { table } = this.state\n\n        const columns = tableData.slice(0,1).map(( header ) => {\n            return(\n                header.map(( column ) => {\n                    return({\n                        headerName: column.headerName,\n                        field: column.field,\n                        editable: column.editable,\n                    })\n                })\n            )\n        })  \n        \n        const data = tableData.slice(1)\n        \n        return (\n            <div id=\"grid\" className=\"p-0 overflow-hidden\">\n                <h2>{table}</h2>\n                <div className=\"ag-theme-alpine\" style={ { height: '800px', width: '100%'} }>\n                    <AgGridReact\n                        columnDefs={columns[0]}\n                        defaultColDef={this.state.defaultColDef}\n                        rowData={data}\n\n                        editType={this.state.editType}\n                        pagination={true}\n                        //stopEditingWhenGridLosesFocus={true}\n                        suppressFieldDotNotation={true}\n                        \n                        onRowValueChanged={this.dataChanged}\n                        onGridReady={this.onGridReady}>\n                    </AgGridReact>\n                </div>\n            </div>\n        );\n    }\n  }","import React, { Component } from 'react';\nimport Table from '../eingabe/Table';\n\nexport default class Eingabe extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            table: this.props.location.state.table,\n            tableData: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://tbf-db-backend.ep-webdesign.de/renderTables.php?table=\" + this.state.table)\n        //fetch(\"http://localhost/renderTables.php?table=\" + this.state.table)\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    tableData: result\n                });\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }   \n        )\n    }\n\n    render() {\n        const { tableData, isLoaded, error, table } = this.state\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else \n        return (\n            <Table tableData={tableData} table={table} />\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\n\nimport App from './App';\nimport Import from './import/Import';\nimport Eingabe from './eingabe/Eingabe';\n//import Erzeugen from './contents/Erzeugen';\n//import Auswerten from './contents/Auswerten';\nimport ExportCard from './cards/ExportCard';\n\nconst routing = (\n  <Router>\n    <Route exact path=\"/\" component={App} />\n    <Route path=\"/import\" component={Import} />\n    <Route path=\"/eingabe\" component={Eingabe} />\n    {/* <Route path=\"/erzeugen\" component={Erzeugen} /> */}\n    {/* <Route path=\"/auswerten\" component={Auswerten} /> */}\n    <Route path=\"/export\" component={ExportCard} />\n  </Router>\n)\n\nReactDOM.render(\n  routing,\n  document.getElementById('root')\n)"],"sourceRoot":""}